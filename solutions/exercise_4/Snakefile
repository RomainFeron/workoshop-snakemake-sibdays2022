# Snakemake command:
# snakemake --cores 1 results/A.sorted.bam.bai results/B.sorted.bam.bai


rule bwa_mem:
    '''
    Align any fastq reads file in 'data/sample' to the assembly 'data/genome.fa'.
    '''
    input:
        assembly = 'data/genome.fa',
        reads = 'data/samples/{sample}.fastq'
    output:
        'results/{sample}.bam'
    shell:
        'bwa mem {input.assembly} {input.reads} | samtools view -b > {output}'


rule samtools_sort:
    '''
    Sort a BAM file generated by the rule bwa_mem.
    We use the recommended syntax for dependencies between rules to specify the
    input: rules.<rule_name>.output. This syntax is preferred over 'results/{sample}.bam'
    because it will be automatically updated if we decide to change the output path of
    our first rule.
    '''
    input:
        rules.bwa_mem.output
    output:
        'results/{sample}.sorted.bam'
    shell:
        'samtools sort -O bam {input} > {output}'


rule samtools_index:
    '''
    Index a sorted BAM file generated by the rule samtools_sort.
    Here, the shell command doesn't require an output file but we still have to specify
    the output in the rule definition, otherwise Snakemake cannot evaluate whether a job
    executed correctly.
    '''
    input:
        rules.samtools_sort.output
    output:
        'results/{sample}.sorted.bam.bai'
    shell:
        'samtools index {input}'
