# Snakemake command:
# snakemake --cores 1 results/variants.vcf


# For now, we define samples to process in a list at the top of the Snakefile
# This makes it more convenient to add / remove samples in our workflow.
SAMPLES = ['A', 'B']


rule bwa_mem:
    '''
    Align any fastq reads file in 'data/sample' to the assembly 'data/genome.fa'.
    '''
    input:
        assembly = 'data/genome.fa',
        reads = 'data/samples/{sample}.fastq'
    output:
        'results/{sample}.bam'
    shell:
        'bwa mem {input.assembly} {input.reads} | samtools view -b > {output}'


rule samtools_sort:
    '''
    Sort a BAM file generated by the rule bwa_mem.
    We use the recommended syntax for dependencies between rules to specify the
    input: rules.<rule_name>.output. This syntax is preferred over 'results/{sample}.bam'
    because it will be automatically updated if we decide to change the output path of
    our first rule.
    '''
    input:
        rules.bwa_mem.output
    output:
        'results/{sample}.sorted.bam'
    shell:
        'samtools sort -O bam {input} > {output}'


rule call_variants:
    '''
    '''
    input:
        alignment_files = expand(rules.samtools_sort.output, sample=SAMPLES),
        assembly = 'data/genome.fa'
    output:
        'results/variants.vcf'
    shell:
        'bcftools mpileup -f {input.assembly} {input.alignment_files} | '
        'bcftools call -mv - > {output}'
